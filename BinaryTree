#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
};
struct Node* create()
{
    int x;
    struct Node* newnode=(struct Node*)malloc(sizeof(struct Node));
    printf("Enter data(-1 for no node):");
    scanf("%d",&x);
    if(x==-1)
    {
        return 0;
    }
    newnode->data=x;
    printf("Enter left child of %d:\n",x);
    newnode->left=create();
    printf("Enter right child of %d:\n",x);
    newnode->right=create();
    return newnode;
}
void inorder(struct Node* root)
{
    if(root==0)
    {
        return;
    }
    inorder(root->left);
    printf("%d ",root->data);
    inorder(root->right);
}
void preorder(struct Node* root)
{
    if(root==0)
    {
        return;
    }
    printf("%d ",root->data);
    preorder(root->left);
    preorder(root->right);
}
void postorder(struct Node* root)
{
    if(root==0)
    {
        return;
    }
    postorder(root->left);
    postorder(root->right);
    printf("%d ",root->data);
}
void main()
{
    struct Node* root;
    clrscr();
    root=create();
    printf("Inorder Traversal:\n");
    inorder(root);
    printf("\nPreorder Traversal:\n");
    preorder(root);
    printf("\nPostorder Traversal:\n");
    postorder(root);
    getch();
}
